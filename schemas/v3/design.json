{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/shanberg/design/main/schemas/v3/design.json",
  "title": "Design Definition",
  "description": "A schema for defining designs, including multi-part specifications and flexible, rich previews.",
  "type": "object",
  "properties": {
    "schemaVersion": {
      "description": "The version of the design.json schema.",
      "type": "string",
      "const": "3.0.0"
    },
    "designType": {
      "description": "Whether this is a physical or digital design.",
      "$ref": "#/$defs/designTypeEnum"
    },
    "designInfo": {
      "$ref": "#/$defs/designInfo"
    },
    "specifications": {
      "description": "The technical specifications of the design artifact(s).",
      "$ref": "#/$defs/specifications"
    },
    "files": {
      "description": "A dictionary of all file items, where each key is a unique file ID.",
      "$ref": "#/$defs/filesCollection"
    },
    "previews": {
      "description": "An ordered list of previews for showcasing the design.",
      "type": "array",
      "items": {
        "$ref": "#/$defs/previewItem"
      }
    },
    "tags": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "A list of keywords for search and discovery."
    },
    "links": {
      "description": "External links related to the design project.",
      "$ref": "#/$defs/linksCollection"
    },
    "layout": {
      "$ref": "#/$defs/layout"
    }
  },
  "required": [
    "schemaVersion",
    "designType",
    "designInfo",
    "specifications",
    "files",
    "previews",
    "layout"
  ],
  "$defs": {
    "designTypeEnum": {
      "type": "string",
      "enum": [
        "physical",
        "digital"
      ]
    },
    "fileCategoryEnum": {
      "type": "string",
      "enum": [
        "workingFiles",
        "deliverables",
        "results",
        "otherFiles"
      ],
      "description": "Categories for organizing files. 'previews' is deprecated in favor of the top-level previews array."
    },
    "unitsEnum": {
      "type": "string",
      "enum": [
        "inch",
        "mm",
        "cm",
        "pt"
      ]
    },
    "basePreview": {
      "type": "object",
      "properties": {
        "isPrimary": {
          "type": "boolean",
          "default": false,
          "description": "Whether this is the primary, or default, preview for the design."
        },
        "title": {
          "type": "string",
          "description": "A user-facing title for this specific preview."
        }
      }
    },
    "imagePreview": {
      "allOf": [
        {
          "$ref": "#/$defs/basePreview"
        },
        {
          "properties": {
            "type": {
              "const": "image"
            },
            "fileKey": {
              "type": "string"
            },
            "width": {
              "type": "integer",
              "description": "The pixel width of the preview image."
            },
            "height": {
              "type": "integer",
              "description": "The pixel height of the preview image."
            },
            "role": {
              "type": "string",
              "enum": [
                "contextual-render",
                "trim-box",
                "detail-shot",
                "orthographic",
                "animated-graphic"
              ]
            }
          },
          "required": [
            "type",
            "fileKey"
          ]
        }
      ]
    },
    "videoPreview": {
      "allOf": [
        {
          "$ref": "#/$defs/basePreview"
        },
        {
          "properties": {
            "type": {
              "const": "video"
            },
            "fileKey": {
              "type": "string"
            },
            "width": {
              "type": "integer",
              "description": "The pixel width of the video."
            },
            "height": {
              "type": "integer",
              "description": "The pixel height of the video."
            }
          },
          "required": [
            "type",
            "fileKey"
          ]
        }
      ]
    },
    "modelPreview": {
      "allOf": [
        {
          "$ref": "#/$defs/basePreview"
        },
        {
          "properties": {
            "type": {
              "const": "model"
            },
            "fileKey": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "fileKey"
          ]
        }
      ]
    },
    "linkPreview": {
      "allOf": [
        {
          "$ref": "#/$defs/basePreview"
        },
        {
          "properties": {
            "type": {
              "const": "link"
            },
            "url": {
              "type": "string",
              "format": "uri"
            },
            "role": {
              "type": "string",
              "enum": [
                "interactive-prototype",
                "live-website",
                "case-study"
              ]
            }
          },
          "required": [
            "type",
            "url",
            "role"
          ]
        }
      ]
    },
    "compositePreview": {
      "allOf": [
        {
          "$ref": "#/$defs/basePreview"
        },
        {
          "properties": {
            "type": {
              "const": "composite"
            },
            "role": {
              "type": "string",
              "enum": [
                "flat-art",
                "brand-sheet",
                "contextual-render"
              ]
            },
            "parts": {
              "type": "array",
              "minItems": 2,
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "fileKey": {
                    "type": "string"
                  }
                },
                "required": [
                  "label",
                  "fileKey"
                ]
              }
            }
          },
          "required": [
            "type",
            "parts"
          ]
        }
      ]
    },
    "sequencePreview": {
      "allOf": [
        {
          "$ref": "#/$defs/basePreview"
        },
        {
          "properties": {
            "type": {
              "const": "sequence"
            },
            "fileKey": {
              "type": "string"
            },
            "role": {
              "type": "string",
              "enum": [
                "slide-deck",
                "page-flip",
                "animation-frames"
              ]
            }
          },
          "required": [
            "type",
            "fileKey",
            "role"
          ]
        }
      ]
    },
    "previewItem": {
      "description": "A displayable preview, which can be one of several types.",
      "discriminator": {
        "propertyName": "type"
      },
      "oneOf": [
        {
          "$ref": "#/$defs/imagePreview"
        },
        {
          "$ref": "#/$defs/videoPreview"
        },
        {
          "$ref": "#/$defs/modelPreview"
        },
        {
          "$ref": "#/$defs/linkPreview"
        },
        {
          "$ref": "#/$defs/compositePreview"
        },
        {
          "$ref": "#/$defs/sequencePreview"
        }
      ]
    },
    "singleSpecification": {
      "properties": {
        "structure": {
          "const": "single"
        }
      },
      "oneOf": [
        {
          "$ref": "#/$defs/physicalSpecifications"
        },
        {
          "$ref": "#/$defs/digitalSpecifications"
        }
      ]
    },
    "multiPartSpecification": {
      "properties": {
        "structure": {
          "const": "multi-part"
        },
        "parts": {
          "type": "array",
          "minItems": 1,
          "items": {
            "allOf": [
              {
                "$ref": "#/$defs/physicalSpecifications"
              },
              {
                "properties": {
                  "partId": {
                    "type": "string"
                  }
                },
                "required": [
                  "partId"
                ]
              }
            ]
          }
        }
      },
      "required": [
        "structure",
        "parts"
      ]
    },
    "specifications": {
      "discriminator": {
        "propertyName": "structure"
      },
      "oneOf": [
        {
          "$ref": "#/$defs/singleSpecification"
        },
        {
          "$ref": "#/$defs/multiPartSpecification"
        }
      ]
    }
  }
}